openapi: 3.0.0
info:
  title: AIFTW API
  version: 1.0.0
  description: |
    AIFTW Platform API documentation.
    This API provides access to AI-powered chat and analysis features.

servers:
  - url: https://api.aiftw.ai/v1
    description: Production server
  - url: http://localhost:3000/api/v1
    description: Development server

security:
  - BearerAuth: []
  - ApiKeyAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    ChatMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        role:
          type: string
          enum: [user, assistant]
        timestamp:
          type: string
          format: date-time
      required:
        - content
        - role

    ChatResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          $ref: '#/components/schemas/ChatMessage'
        suggestions:
          type: array
          items:
            type: string

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

paths:
  /chat:
    post:
      summary: Send a message to the AI
      operationId: sendMessage
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                context:
                  type: object
              required:
                - message
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chat/{conversationId}/history:
    get:
      summary: Get conversation history
      operationId: getChatHistory
      tags:
        - Chat
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: before
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Chat history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'

  /health:
    get:
      summary: Health check endpoint
      operationId: healthCheck
      tags:
        - System
      security: []
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  version:
                    type: string
